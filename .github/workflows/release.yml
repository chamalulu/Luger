name: Release reusable workflow

on:
  workflow_call:
    inputs:

      project-name:
        required: true
        type: string
        description: Project name (Normally the name of the project file without extension.)

      project-file:
        required: true
        type: string
        description: Relative path to project file

      #tag-ref:
      #  required: true
      #  type: string
      #  description: Tag to release (E.g. "refs/tags/MyProj/v1.0.0")

      test-project-file:
        required: true
        type: string
        description: Relative path to test project file

      package-name-prefix:
        required: false
        type: string
        default: Luger.
        description: Package name prefix

    secrets:

      NUGET_API_KEY:
        required: true
        description: API key for pushing package to nuget.org

jobs:
  reusable_release_job:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify commit exists in origin/trunk
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/trunk

    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF_NAME##*/v}" >> $GITHUB_ENV

    - name: Set CACHE_PATH for next silly step
      run: |
        ACP=/var/cache/apt/archives/
        eval $(apt-config shell ACP Dir::Cache::archives/d)
        echo "CACHE_PATH=${ACP}libxml2-utils*" >> $GITHUB_ENV

    - name: Set CACHE_KEY for next silly step
      run: |
        LIBXML2_VERSION=$(apt show libxml2-utils | grep ^Version:\ | head -n 1 | cut -sd " " -f 2)
        echo "CACHE_KEY=${RUNNER_OS}-libxml2-utils-${LIBXML2_VERSION}" >> $GITHUB_ENV

      # Yes, it's silly to cache this small package, but i'm playing around here.
    - name: Setup libxml2-utils debian package caching
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHE_PATH }}
        key: ${{ env.CACHE_KEY }}

    - name: Install xmllint
      run: |
        sudo apt-get -y install libxml2-utils
        xmllint --version

    - name: Verify tag represents version in project file
      env:
        VERIFY_VERSION: "${{ github.workspace }}/.github/scripts/verifyversion.sh"
      run: |
        chmod +x ${VERIFY_VERSION}
        ${VERIFY_VERSION} ${VERSION} ${{ github.workspace }}/${{ inputs.project-file }}

    - name: Build
      run: dotnet build ${{ github.workspace }}/${{ inputs.project-file }} --configuration Release -p:Version=${VERSION}

    - name: Test
      run: dotnet test ${{ github.workspace }}/${{ inputs.test-project-file }} --configuration Release

    - name: Pack
      run: dotnet pack ${{ github.workspace }}/${{ inputs.project-file }} --configuration Release -p:Version=${VERSION} --no-build --output .

    - name: Set NUPKG_FILE variable package-name-prefix, project-name and VERSION
      run: echo "NUPKG_FILE=${{ inputs.package-name-prefix }}${{ inputs.project-name }}.${VERSION}.nupkg" >> $GITHUB_ENV

    - name: Push to NuGet
      #run: dotnet nuget push ${NUPKG_FILE} --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      run: echo "Would execute $ dotnet nuget push ${NUPKG_FILE} --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}"

    - name: Create GitHub Release
      run: gh release create --generate-notes ${GITHUB_REF} #${NUPKG_FILE}
